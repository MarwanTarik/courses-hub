// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  email       String    @unique
  password    String
  phonenumber String    @unique
  address     String
  gender      Gender
  role_id     Int
  student     Students?
  role        Roles     @relation(fields: [role_id], references: [id])
}

model Students {
  userId         Int              @unique
  studentId      String           @unique
  gpa            Decimal          @db.Decimal(2, 1)
  levelId        Int
  departmentId   Int
  level          Levels           @relation(fields: [levelId], references: [id])
  department     Departments      @relation(fields: [departmentId], references: [id])
  user           Users            @relation(fields: [userId], references: [id], onDelete: Cascade)
  studentCourses StudentCourses[]
}

model Roles {
  id    Int     @id @default(autoincrement())
  role  Role    @unique
  users Users[]
}

model Courses {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  creditHours    Int
  code           String           @unique
  departmentId   Int
  department     Departments      @relation(fields: [departmentId], references: [id])
  studentCourses StudentCourses[]
}

model StudentCourses {
  studentId String   @unique
  courseId  String   @unique
  grade     Grade?
  score     Int?
  Students  Students @relation(fields: [studentId], references: [studentId])
  Courses   Courses  @relation(fields: [courseId], references: [code])
}

model Levels {
  id       Int        @id @default(autoincrement())
  level    Level      @unique
  students Students[]
}

model Departments {
  id         Int        @id @default(autoincrement())
  department Department @unique
  students   Students[]
  courses    Courses[]
}

enum Gender {
  male
  female
}

enum Role {
  student
  admin
  guest
}

enum Department {
  CS
  IT
  AI
  IS
}

enum Level {
  first
  second
  third
  fourth
}

enum Grade {
  A_PLUS
  A
  B_PLUS
  B
  C_PLUS
  C
  D_PLUS
  D
  F
}
